name: release
on:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-latest
    name: Release package
    steps:
      - uses: actions/checkout@v4

      - name: Fetch complete history for all tags and branches
        run: git fetch --prune --unshallow

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install release packages
        run: pip install setuptools wheel twine setuptools-scm[toml]

      - name: Build distribution
        run: python setup.py sdist bdist_wheel

      - name: Publish to Test PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD_TEST }}
        run: twine upload --repository testpypi dist/* #--skip-existing

      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: twine upload --repository pypi dist/* #--skip-existing

  changelog:
    needs: release
    runs-on: ubuntu-latest
    name: Update Changelog
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create new branch
        run: git checkout -b actions/changelog

      - name: Set branch upstream
        run: git push -u origin actions/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install release packages
        run: pip install wheel gitchangelog pystache

      - name: Set variables
        run: echo "VERSION=$(curl ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/latest | python -c "import sys; import json; print(json.load(sys.stdin)['tag_name'])")" >> $GITHUB_ENV

      - name: Generate newest changelog
        run: gitchangelog ${{env.VERSION}} > CHANGELOG.md

      - name: Make commit for auto-generated changelog
        uses: EndBug/add-and-commit@v9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          add: "CHANGELOG.md"
          new_branch: actions/changelog
          message: "!gitchangelog"

      - name: Create pull request for the auto generated changelog
        run: |
          echo "PR_URL=$(gh pr create \
            --title "changelog: release ${{env.VERSION}}" \
            --body "beep boop, i am a robot" \
            --label documentation)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Alert developer of open PR
        run: echo "Changelog $PR_URL is ready to be merged by developer."
